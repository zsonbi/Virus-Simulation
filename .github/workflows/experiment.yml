name: Experiment

on:
  workflow_dispatch: {}

### Refer to https://game.ci/docs/github/getting-started
jobs:
  checklicense:
    name: Check for UNITY_LICENSE in GitHub Secrets
    runs-on: ubuntu-latest
    outputs:
      is_unity_license_set: ${{ steps.checklicense_job.outputs.is_unity_license_set }}
    steps:
      - name: Check whether unity activation requests should be done
        id: checklicense_job
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        run: |
            echo "Skip activation job: ${{ env.UNITY_LICENSE != '' }}"
            export is_unity_license_set="${{ env.UNITY_LICENSE != '' }}"
            echo "is_unity_license_set=$is_unity_license_set" >> $GITHUB_OUTPUT

  activation:
    needs: checklicense
    if: needs.checklicense.outputs.is_unity_license_set == 'false'
    name: Request manual activation file ðŸ”‘
    runs-on: ubuntu-latest
    steps:
      # Request manual activation file
      - name: Request manual activation file
        id: getManualLicenseFile
        uses: game-ci/unity-request-activation-file@v2
      # Upload artifact (Unity_v20XX.X.XXXX.alf)
      - name: Expose as artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.getManualLicenseFile.outputs.filePath }}
          path: ${{ steps.getManualLicenseFile.outputs.filePath }}
          retention-days: 1

  

  

      
        


  buildForWebGL:
        if: contains(github.ref, 'master') || contains(github.ref, 'workflow-setup')
        name: Build for ${{ matrix.targetPlatform }}
        runs-on: ubuntu-latest
        strategy:
          fail-fast: false
          matrix:
            targetPlatform:
              - WebGL
        steps:
          - uses: actions/checkout@v4.1.2
            with:
              lfs: true
          - uses: actions/cache@v4.0.2
            with:
              path: Library
              key: Library-${{ matrix.targetPlatform }}
          - uses: actions/upload-artifact@v4
            with:
              name: Coverage_results
              path: "./ci"
              retention-days: 4hr
          - run: 
              sudo mkdir -p release;
              sudo mkdir -p release/game;
              sudo mkdir -p release/Report;
              sudo mkdir -p release/documentation;
              sudo mv ci/index.html ./release/index.html;
              sudo chmod -R 777 ./release;
          - name: Download test coverage
            uses: actions/download-artifact@v4.1.7
            with:
              name: Coverage_results
              path: ./release/Report
              merge-multiple: true
              githubToken: ${{ secrets.GITHUB_TOKEN }}
          - name: "Create docs"
            run: 
              sudo apt-get update && sudo apt-get install -y doxygen graphviz;
              doxygen ./DoxygenConf;
              sudo mv ./docs/html/*  ./release/documentation;
              ls -la
 
          # - uses: actions/upload-artifact@v3
          #   with:
          #     name: Build-${{ matrix.targetPlatform }}
          #     path: build
          #     retention-days: 1
          - name: Deploy to GitHub Pages
            uses: JamesIves/github-pages-deploy-action@4.1.1
            if: matrix.targetPlatform == 'WebGL'
            with:
              branch: gh-pages # The branch the action should deploy to.
              folder: build/WebGL/WebGLWebGL # The folder the action should deploy.
             
